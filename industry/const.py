#Embedded file name: industry\const.py
"""
Industry constants.
"""
from .enum import Enum
VERSION = 48
MANUFACTURING = 1
RESEARCH_TIME = 3
RESEARCH_MATERIAL = 4
COPYING = 5
INVENTION = 8
ACTIVITIES = (MANUFACTURING,
 RESEARCH_MATERIAL,
 RESEARCH_TIME,
 COPYING,
 INVENTION)
ACTIVITY_NAMES = {MANUFACTURING: 'manufacturing',
 RESEARCH_MATERIAL: 'research_material',
 RESEARCH_TIME: 'research_time',
 COPYING: 'copying',
 INVENTION: 'invention'}
ACTIVITY_NAME_IDS = {v:k for k, v in ACTIVITY_NAMES.iteritems()}
STATUS_UNSUBMITTED = 0
STATUS_INSTALLED = 1
STATUS_PAUSED = 2
STATUS_READY = 3
STATUS_COMPLETED = 100
STATUS_DELIVERED = 101
STATUS_CANCELLED = 102
STATUS_REVERTED = 103

class Error(Enum):
    """
    All possible validation error codes are defined here. We use an
    enum to help with debugging, as it will print the name of the
    error as well as the code.
    """
    INVALID_OWNER = 1
    INVALID_CHARACTER = 2
    INVALID_CORPORATION = 3
    INVALID_RUNS = 4
    INVALID_LICENSED_RUNS = 5
    INVALID_INPUT_LOCATION = 6
    INVALID_OUTPUT_LOCATION = 7
    INVALID_BLUEPRINT_LOCATION = 29
    INVALID_PRODUCT = 8
    INVALID_COST = 9
    INVALID_ACTIVITY = 10
    INVALID_FACILITY = 11
    INVALID_TEAM = 37
    INVALID_MATERIAL_EFFICIENCY = 45
    INVALID_TIME_EFFICIENCY = 46
    MISSING_ACTIVITY = 12
    MISSING_ROLE = 13
    MISSING_BLUEPRINT = 14
    MISSING_FACILITY = 15
    MISSING_MATERIAL = 16
    MISSING_INPUT_LOCATION = 17
    MISSING_OUTPUT_LOCATION = 18
    MISSING_SKILL = 30
    ACCOUNT_FUNDS = 19
    ACCOUNT_ACCESS = 20
    ACCOUNT_INVALID = 44
    INCOMPATIBLE_ACTIVITY = 21
    BLUEPRINT_ACCESS = 22
    BLUEPRINT_INSTALLED = 23
    BLUEPRINT_WRONG_FACILITY = 24
    MISMATCH_COST = 25
    MISMATCH_TAX = 26
    MISMATCH_TIME = 27
    MISMATCH_MATERIAL = 28
    SLOTS_FULL = 31
    FACILITY_DISTANCE = 32
    FACILITY_ACTIVITY = 33
    FACILITY_TYPE = 34
    TEAM_ACTIVITY = 35
    TEAM_SOLARSYSTEM = 36
    RUN_LENGTH = 38
    RESEARCH_LIMIT = 39
    FACILITY_OFFLINE = 40
    FACILITY_DENIED = 41
    TEAM_INAUCTION = 42
    INPUT_ACCESS = 43


class Reference(Enum):
    """
    References are attached to modifiers to indicate where they come from.
    """
    BLUEPRINT = 1
    TEAM = 2
    DECRYPTOR = 3
    SYSTEM = 4
    FACILITY = 5
    SKILLS = 6
    BASEITEM = 7
    DISTRICT = 8
    FACTION = 9


ROLE_FACTORY_MANAGER = 1024
ROLE_FACTORY_MANUFACTURING = 1125899906842624L
ROLE_FACTORY_SCIENCE = 2251799813685248L
SKILL_INDUSTRY = 3380
SKILL_SCIENCE = 3402
SKILL_SCIENTIFIC_NETWORKING = 24270
SKILL_SUPPLY_CHAIN_MANAGEMENT = 24268
SKILLS = [SKILL_INDUSTRY,
 SKILL_SCIENCE,
 SKILL_SCIENTIFIC_NETWORKING,
 SKILL_SUPPLY_CHAIN_MANAGEMENT]
DISTANCE_PER_LEVEL = {0: 0,
 1: 5,
 2: 10,
 3: 15,
 4: 20,
 5: 25}
DISTANCE_SKILL_FOR_ACTIVITY = {MANUFACTURING: SKILL_SUPPLY_CHAIN_MANAGEMENT,
 RESEARCH_TIME: SKILL_SCIENTIFIC_NETWORKING,
 RESEARCH_MATERIAL: SKILL_SCIENTIFIC_NETWORKING,
 COPYING: SKILL_SCIENTIFIC_NETWORKING,
 INVENTION: SKILL_SCIENTIFIC_NETWORKING}
MIN_MATERIAL_EFFICIENCY = -80
MAX_MATERIAL_EFFICIENCY = 10
STEP_MATERIAL_EFFICIENCY = 1
MIN_TIME_EFFICIENCY = -120
MAX_TIME_EFFICIENCY = 20
STEP_TIME_EFFICIENCY = 2
MATERIAL_ROUND_PRECISION = 2
MAX_RUNS = 1000000
COST_PERCENTAGE = 0.02
MAX_RUN_LENGTH = 2592000
RESEARCH_TIMES = [1.0,
 29 / 21.0,
 23 / 7.0,
 39 / 5.0,
 278 / 15.0,
 928 / 21.0,
 2200 / 21.0,
 5251 / 21.0,
 4163 / 7.0,
 29660 / 21.0]
INVENTION_MATERIAL_EFFICIENCY = 2
INVENTION_TIME_EFFICIENCY = 4
INVENTION_SKILL_PROBABILITY = 1.0 / 30.0
INVENTION_SKILL_PROBABILITIES = {23087: 1.0 / 40.0,
 21790: 1.0 / 40.0,
 23121: 1.0 / 40.0,
 21791: 1.0 / 40.0,
 3408: 1.0 / 40.0}
